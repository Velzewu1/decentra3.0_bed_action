#!/usr/bin/env python3

import pandas as pd
import numpy as np

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
print("üìä –ê–ù–ê–õ–ò–ó –¢–†–ï–• –ö–õ–ê–°–¢–ï–†–û–í\n")

# Summary
segments_df = pd.read_parquet('segment_summary.parquet')
print("üéØ –ö–†–ê–¢–ö–ê–Ø –°–í–û–î–ö–ê –ü–û –ö–õ–ê–°–¢–ï–†–ê–ú:")
print(segments_df[['segment', 'segment_name', 'size', 'percentage', 'avg_amount', 'avg_transactions']].to_string())

# –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
df = pd.read_csv('customer_segments.csv')
print(f"\nüìà –†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –ö–õ–ò–ï–ù–¢–û–í:")
print(df['segment'].value_counts().sort_index())

# –ê–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Ç–µ—Ä–∞
print(f"\nüîç –î–ï–¢–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó –ö–õ–ê–°–¢–ï–†–û–í:")

for cluster_id in sorted(df['segment'].unique()):
    cluster_data = df[df['segment'] == cluster_id]
    
    if cluster_id == -1:
        cluster_name = "OUTLIERS (–®—É–º)"
    else:
        cluster_name = f"CLUSTER {cluster_id}"
    
    print(f"\n{'='*50}")
    print(f"üéØ {cluster_name}")
    print(f"{'='*50}")
    print(f"üë• –†–∞–∑–º–µ—Ä: {len(cluster_data):,} –∫–ª–∏–µ–Ω—Ç–æ–≤ ({len(cluster_data)/len(df)*100:.1f}%)")
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    print(f"üí∞ –°—Ä–µ–¥–Ω—è—è —Å—É–º–º–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: {cluster_data['avg_amount'].mean():,.2f} —Ç–µ–Ω–≥–µ")
    print(f"üìä –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {cluster_data['tx_count'].mean():.1f}")
    print(f"üí≥ –û–±—â–∏–π –¥–æ—Ö–æ–¥: {cluster_data['total_amount'].sum():,.0f} —Ç–µ–Ω–≥–µ")
    
    # –ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
    print(f"üì± Digital Wallet –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: {cluster_data['digital_wallet_ratio'].mean():.1%}")
    print(f"üíé Contactless –ø–ª–∞—Ç–µ–∂–∏: {cluster_data['contactless_ratio'].mean():.1%}")
    print(f"üåç –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: {cluster_data['international_ratio'].mean():.2%}")
    
    # –ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ
    print(f"üèôÔ∏è  –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –≥–æ—Ä–æ–¥–æ–≤: {cluster_data['city_diversity'].mean():.1f}")
    print(f"üåê –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ —Å—Ç—Ä–∞–Ω: {cluster_data['country_diversity'].mean():.1f}")
    
    # –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    print(f"üéì –ò–∑–æ—â—Ä–µ–Ω–Ω–æ—Å—Ç—å –ø–ª–∞—Ç–µ–∂–µ–π: {cluster_data['payment_sophistication'].mean():.3f}")
    print(f"üíº Customer Lifetime Value: {cluster_data['customer_lifetime_value'].mean():,.0f} —Ç–µ–Ω–≥–µ")
    
    # –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
    if 'weekend_ratio' in cluster_data.columns:
        print(f"üéâ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö: {cluster_data['weekend_ratio'].mean():.1%}")

print(f"\nüîÑ –ü–û–ß–ï–ú–£ 3 –ö–õ–ê–°–¢–ï–†–ê –í–ú–ï–°–¢–û 5?")
print("="*50)
print("1. –ë–æ–ª–µ–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã HDBSCAN")
print("2. –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö")
print("3. –ë–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏–∏")
print("4. Ensemble refinement –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∞—Å—Ç–µ—Ä–æ–≤")
print("5. –î–∞–Ω–Ω—ã–µ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –≤ 3 –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ–≥–º–µ–Ω—Ç–∞") 