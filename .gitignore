# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

# ==========================================
# HEAVY/LARGE FILES - Тяжелые файлы
# ==========================================

# Large data files / Большие файлы данных
*.csv
*.tsv
*.dat
*.data
*.parquet
*.feather
*.h5
*.hdf5
*.xlsx
*.xls

# Database files / Файлы баз данных
*.db
*.sqlite
*.sqlite3
*.db3
*.mdb
*.accdb

# Model files / Файлы моделей
*.pkl
*.pickle
*.joblib
*.model
*.h5
*.pb
*.ckpt
*.pth
*.pt
*.weights
*.bin

# Large media files / Большие медиафайлы
*.mp4
*.avi
*.mov
*.mkv
*.wmv
*.flv
*.mp3
*.wav
*.flac
*.ogg
*.m4a
*.aac
*.mp4a
*.m4v
*.3gp
*.3g2
*.mj2

# Large image files / Большие изображения
*.png
*.jpg
*.jpeg
*.gif
*.bmp
*.tiff
*.tif
*.raw
*.cr2
*.nef
*.arw
*.dng
*.psd
*.ai
*.eps
*.svg
*.webp

# Archive files / Архивы
*.zip
*.rar
*.7z
*.tar
*.tar.gz
*.tgz
*.tar.bz2
*.tar.xz
*.gz
*.bz2
*.xz
*.Z

# Log files / Лог файлы
*.log
*.out
*.err
logs/
log/

# Cache and temporary files / Кэш и временные файлы
*.tmp
*.temp
*.cache
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# Jupyter notebook checkpoints / Чекпоинты Jupyter
.ipynb_checkpoints/
*.ipynb

# IDE files / Файлы IDE
.vscode/
.idea/
*.sublime-*
*.code-workspace

# Node.js dependencies (if applicable) / Зависимости Node.js
node_modules/
npm-debug.log
yarn-error.log
package-lock.json
yarn.lock

# Docker files / Docker файлы
*.dockerfile
docker-compose.override.yml

# Build outputs / Результаты сборки
build/
dist/
out/
target/

# Size-based rules / Правила по размеру
# Files larger than 100MB will be blocked by GitHub anyway
# Файлы больше 100МБ все равно заблокированы GitHub

# ==========================================
# SECURITY / СЕКРЕТНЫЕ ФАЙЛЫ
# ==========================================

# Environment files / Файлы окружения
.env*
!.env.example
!.env.template
.environment
.env.local
.env.development
.env.test
.env.production
.env.staging

# API Keys and secrets / API ключи и секреты
*key*
*secret*
*token*
*credentials*
*.pem
*.p12
*.pfx
*.keystore
*config.json
*settings.json
secrets.txt
keys.txt
api_keys.txt

# Backup files / Резервные копии
*.bak
*.backup
*.old
*.orig

# OS generated files / Системные файлы
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary directories used by tools / Временные папки
.tmp/
.temp/
tmp/
temp/
